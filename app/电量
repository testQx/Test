获取方案：
     使用android 自带adb 命令获取电量使用情况,手机需wifi 连接电脑
     耗电测试要点：
         1. 关闭所有后台程序，如果可以卸载无用app
         2. 关闭蓝牙、gps、手机卡掏出后台耗电模块
         3. 屏幕亮度固定
         4. 屏幕显示场景接近（白色背景耗电远高于黑色背景）
         5. 同时从室温开始测试，温度会对手机电池有影响
         6. 尽量从90%-80% 阶段开始测试，防止起始电量不同对耗电有影响
方案1: 获取手机总电量
     命令：adb -s "device" shell dumpsys battery | grep level  既可获取手机剩余电量
    备注：（后续补充常见机型耗电曲线）
           1. 无法精确获取电量消耗，包括屏幕耗电等，测试前置条件需满足：
                1） 起始电量相同（手机电量非线性消耗）
                2） 清空后台其他程序
                3） 屏幕亮度固定
方案2：获取app详细耗电
      命令：adb -s devices shell dumpsys batterystats | grep "Uid  "uid 获取app 详细耗电

    备注：
            1. 为了提高数据准确性需要打开收集唤醒数据（wake）：adb -s "devices" shell dumpsys batterystats --enable full-wake-history
            2. 完成电量获取后需关闭收集唤醒数据：adb -s "devices" shell dumpsys batterystats --disable full-wake-history
手机常见机型耗电量曲线：
      1. 充满电、确定屏幕亮度
      2. 播放西瓜长视频，10分钟获取一次电量

四种简单方法耗尽电量：
设置很多定时器
如果你不能一直运行代码，那么最好的事情就是确保有一个或七个可以唤醒代码并使之执行某些操作的高频计时器。你可能在一些看起来不是很重要的事情上浪费了很多电量。一次又一次地问同样的问题：“我的广告现在在此屏幕上吗？现在怎么样？现在在吗？现在怎么样？”是实现此目的的绝佳方法。但是重复询问一个已经订阅过的事件才是最耗电的.

使用长时间播放的动画
这有点像计时器，但你甚至不必使用笨拙/烦人的计时器API！只需使用一些CSS样式或类似的样式，你就可以创建精美的30年代动画。一个典型的例子就是一个30s的进度条以60fps的速度进行动画处理，因为我们所有人都需要在进度条上看到60fps的保真度(哈哈...)。我曾经见到过很多类似的情况，进度条比实际进程/线程（异步）耗费更多电量。
这并不是说所有动画都是不好的，因为人们确实喜欢关注有动画的地方。如果你需要依靠动画来吸引用户注意，那么真正的问题可能是，这不是一个好的功能。另一方面，没有任何动画像心脏跳动一样，可以带给我纯粹的快乐并且值得耗费相应的能量。
动画可能是最好的耗电方法. 因为它可以用很少的代码就可以烧毁GPU和CPU.你甚至不需要写测试代码只需一个动画就可以影响你花费很多时间完成的精美的布局.

避免工作队列
如果你确实在使用计时器在浪费电量，但是没有足够多的计时器或其他事件来真正消耗电量，那么你可以在完全没有并发的情况下顺序执行所有的代码。一个1hz的计时器在耗电方面做的还不错，如果能使用10 个1hz的计时器进行交替计时，那么就可以构造出一个耗电量更大的10hz的计时器。不要让CPU进入烦人的低功耗状态，经常在不同的地方使用它。

做很多推测性的工作
每个人都有良好的预测能力。如果你的CPU可能变得空闲，请让CPU推测用户下一步将要做什么。不必担心它是对还是错，或者它消耗了多少能量，只需保持CPU运转即可。CPU就像峡口中的鲨鱼一样，如果停止移动，它将死掉。因此，即使没有任何实际工作，那么请确保处理器可以进行一些推测工作,甚至是真正的工作！切记：如果让处理器忙于推测，你在实际工作中会得到较差的性能。如果处理器的推测有一半是错误的，那将浪费50％的电量！你正准备像冠军一样耗尽电池电量。

battery-historian
        battery-historian 是google官方提供的电量消耗可视化工具。Battery Historian是一个工具，设备处于未充电状态下，在Android 5.0系统（API级别21）及更高版本的Android设备上用于检查与电池相关的信息和事件。它允许应用程序开发人员在具有平移和缩放功能的时间线上可视化系统和应用程序级事件，轻松查看自设备上次完全充电以来的各种汇总统计数据，可以选择应用程序并检查特定应用程序的影响电池的指标。它还允许对两个错误报告进行A/B比较，突出与电池相关的关键指标的差异。（摘自谷歌官方文档）
安装教程：https://github.com/google/battery-historian
使用过程：
   1. 手机通过usb 方式连接电脑
   2. 打开收集唤醒数据，使得测试结果更精确
          命令：adb shell dumpsys batterystats --enable full-wake-history
   3. 清空耗电量信息
         命令：adb shell dumpsys batterystats --reset
   4. 断开手机usb连接，充电状态下无法收集电量信息
   5. 执行相应操作
   6. 获取耗电信息
        命令：adb bugreport bugreport.zip (Android 7.0 及以上)
                   adb bugreport > bugreport.txt (Android 6.0 及以下)
  7. 访问http:localhost:9999 ,将步骤6获取的文件上传、分析既可获取电量消耗信息