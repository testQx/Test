import os
#新建文档
os.mkdir("b")
#打印当前路径所有文件/文件夹内容
print(os.listdir("./"))
#删除空文件夹
os.removedirs("b")
#获取当前路径
print(os.getcwd())
print(os.path)
#如果c文件不存在当前路径中
if not os.path.exists("c"):
    os.mkdir("c")
if not os.path.exists("c/d.txt"):
    # r 以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。
    # rb 以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。这是默认模式。
    # r + 打开一个文件用于读写。文件指针将会放在文件的开头。
    # rb + 以二进制格式打开一个文件用于读写。文件指针将会放在文件的开头。
    # w 打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。
    # wb 以二进制格式打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。
    # w + 打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。
    # wb + 以二进制格式打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。
    # a 打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。
    # ab 以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。
    # a + 打开一个文件用于读写。如果该文件已存在，文件指针将会放在文件的结尾。文件打开时会是追加模式。如果该文件不存在，创建新文件用于读写。
    # ab + 以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。如果该文件不存在，创建新文件用于读写。

    # 打开文件   #注意open("c/d.txt","w+"时，刚写入文件立刻执行read是无结果)
    f=open("c/d.txt","w")
    #写入文件
    f.write("hello")
    #关闭文件
    f.close()
    f=open("c/d.txt","r")
    print(f.read())
    f.close()
    #递归删除文件夹
    import shutil
    shutil.rmtree("c")

