#!/bin/bash -  
  
  
function mytest3()  
{  
    grep "123" test.txt | awk -F: '{print $2}' | while read line ;do  
        echo "$line"  
        if [ $line = "yxb" ]; then  
            return 0    # return to pipe only  
        fi  
    done  
  
    echo "mytest3 here "  
    return 1            # return to main process  
}  
  
g_var=  
function mytest4()  
{  
    grep "123" test.txt | awk -F: '{print $2}' | while read line ;do  
        echo "$line"  
        if [ $line = "test" ]; then  
            g_var=0  
            echo "g_var=0"  
            return 0    # return to pipe only  
        fi  
    done  
  
    echo "mytest4 here "  
    return 1  
}  
  
mytest3  
echo $?  
  
echo  
mytest4  
echo $?  
  
echo  
echo "g_var=$g_var"


#此时的g_var为空输出
#先执行mytest3时，在return 0时跳出子进程（因为该子进程是管道符中的），跳出循环后继续执行函数体，所以return 1；且g_var=0也是在子进程中完成的，不能反映到父进程中，所以不能输出
